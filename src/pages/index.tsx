import Head from "next/head";
import { SignInButton, useUser } from "@clerk/nextjs";
import type { RouterOutputs } from "@/utils/api";
import Image from "next/image";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { api } from "@/utils/api";
import { LoadingIcon } from "@/components/Loading";
import { useState } from "react";
import toast from "react-hot-toast";
import Link from "next/link";

const CreatePostWizard = () => {
  const { user } = useUser();

  const [input, setInput] = useState<string>("");
  const ctx = api.useContext();

  const { mutate } = api.posts.create.useMutation({
    onSuccess: () => {
      setInput("");
      void ctx.posts.getAll.invalidate();
    },
    onError: (e) => {
      const errorMessage = e.data?.zodError?.fieldErrors.content;
      if (errorMessage?.[0]) {
        toast.error(errorMessage[0]);
      }

      toast.error("too many posts");
    },
  });

  dayjs.extend(relativeTime);

  if (!user) return null;

  return (
    <div className="flex gap-3">
      <Image
        className="rounded-full"
        src={user.profileImageUrl}
        alt="profile image"
        width={100}
        height={100}
      />
      <input
        className=" w-full bg-transparent outline-none "
        type="text"
        placeholder="What's on your mind?"
        value={input}
        onChange={(e) => setInput(e.target.value)}
      />
      <button onClick={() => mutate({ content: input })}>Post</button>
    </div>
  );
};
type postWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: postWithUser) => {
  const { post, author } = props;
  return (
    <div className="flex gap-4  border-b  border-slate-500 p-4" key={post.id}>
      <Image
        className="rounded-full"
        alt="profile image"
        src={author.profileImageUrl}
        width={50}
        height={50}
      />
      <div className="flex flex-col">
        <div className="flex gap-4">
          <Link href={`/@${author.username}`}>
            <span>{`@${author.username}`}</span>
          </Link>
          <Link href={`/@${author.username}`}>
            <span>{`${dayjs(post.createdAt).fromNow()}`}</span>
          </Link>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

export default function Home() {
  const { user } = useUser();
  console.log(user);
  const { data, isLoading } = api.posts.getAll.useQuery();
  if (isLoading)
    return (
      <div className="  flex h-full min-h-screen w-full flex-col  items-center justify-center">
        <LoadingIcon />
      </div>
    );
  if (user && !data) return <div>Something went wrong</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex justify-center text-slate-100">
        <div className="h-screen w-full border-x border-slate-400 md:max-w-2xl">
          <div className=" border-b border-slate-400 p-4">
            {!user && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {user && <CreatePostWizard />}
          </div>
          <div className="flex flex-col">
            {data?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
